var util = require('util');
var events = require('events');
var Types = require('./config.json')['types'];
var Responses = require('./config.json')['responses'];
var DiscoverMapNeighborsCommand = require('./command/discover-map-neighbors');

var Node = function(id, type) {
	this.id = id;
	this.type = type;
};

var Construction = function() {
	events.EventEmitter.call(this);

	this.connection = undefined;
	this.origin = new Node('0', Types.UNKNOWN);

	var construction = this;

	this.near = [];
	this.far = [];

	var handleConnectionResponse = function(response) {
		if (response.type == Responses.MAP_NEIGHBORS) {
			console.log(response);
			return;
		}
	};

	var handleConnectionOpen = function() {
		construction.discover();
	}

	var removeConnectionListeners = function(connection) {
		if (connection) {
			connection.removeListener('response', handleConnectionResponse);
			connection.removeListener('open', handleConnectionOpen);
		}
	};

	var addConnectionListeners = function(connection) {
		if (connection) {
			connection.on('response', handleConnectionResponse);
			connection.on('open', handleConnectionOpen);
		}
	};

	this.setConnection = function(connection) {
		removeConnectionListeners(this.connection);
		this.connection = connection;
		addConnectionListeners(this.connection);
	};

	this.discover = function() {
		this.connection.postCommand(new DiscoverMapNeighborsCommand());
	};

	this.mock = function(origin, near, far) {
		this.origin = origin;
		this.near = near;
		this.far = far;
	}

};

util.inherits(Construction, events.EventEmitter);
module.exports = Construction;